C51 COMPILER V9.60.0.0   OLED                                                              05/21/2021 09:53:29 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\list\OLED.obj
COMPILER INVOKED BY: D:\20.keil C51\C51\BIN\C51.EXE OLED\OLED.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\delay;.\GPIO;.\L
                    -ED;.\OLED;.\Gyro;.\Uart1;.\STEP_MOTOR;.\TRAFFIC_LIGHT) PRINT(.\list\OLED.lst) TABS(2) OBJECT(.\list\OLED.obj)

line level    source

   1          //******************************************************************************/。
   2          #include "oled.h"
   3          #include "oled_font.h"
   4          //OLED的显存
   5          //存放格式如下.
   6          //[0]0 1 2 3 ... 127  
   7          //[1]0 1 2 3 ... 127  
   8          //[2]0 1 2 3 ... 127  
   9          //[3]0 1 2 3 ... 127  
  10          //[4]0 1 2 3 ... 127  
  11          //[5]0 1 2 3 ... 127  
  12          //[6]0 1 2 3 ... 127  
  13          //[7]0 1 2 3 ... 127    
  14          
  15          /******************** IO配置函数 **************************/
  16          void  OLED_GPIO_config(void)
  17          {
  18   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  19   1        
  20   1        //推完输出
  21   1        GPIO_InitStructure.Mode = GPIO_OUT_PP;    //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  22   1        
  23   1        GPIO_InitStructure.Pin  = GPIO_Pin_5;   //指定要初始化的IO, GPIO_Pin_5, OLED的CLK
  24   1        GPIO_Inilize(GPIO_P4, &GPIO_InitStructure); //初始化
  25   1        
  26   1        //开漏输出
  27   1        GPIO_InitStructure.Mode = GPIO_OUT_OD;    //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  28   1        
  29   1        GPIO_InitStructure.Pin  = GPIO_Pin_6;   //指定要初始化的IO, GPIO_Pin_6, OLED的DIO
  30   1        GPIO_Inilize(GPIO_P4, &GPIO_InitStructure); //初始化
  31   1      }
  32          
  33          
  34          
  35          
  36          
  37          static void delay_us(unsigned int ms)
  38          {
  39   1        while(ms--);
  40   1      }
  41          /**********************************************
  42          //IIC Start
  43          **********************************************/
  44          void IIC_Start()
  45          {
  46   1        OLED_SCL = 1;
  47   1        OLED_SDIN = 1;
  48   1        delay_us(1);
  49   1        OLED_SDIN = 0;
  50   1        delay_us(1);
  51   1        OLED_SCL = 0;
  52   1      }
C51 COMPILER V9.60.0.0   OLED                                                              05/21/2021 09:53:29 PAGE 2   

  53          
  54          /**********************************************
  55          //IIC Stop
  56          **********************************************/
  57          void IIC_Stop()
  58          {
  59   1        OLED_SCL = 0;
  60   1        OLED_SDIN = 0;
  61   1        delay_us(1);
  62   1        OLED_SCL = 1;
  63   1        delay_us(1);
  64   1        OLED_SDIN = 1;
  65   1      }
  66          
  67          void IIC_Wait_Ack()
  68          {
  69   1        OLED_SCL = 1;
  70   1        delay_us(1);
  71   1        OLED_SCL = 0;
  72   1        delay_us(1);
  73   1      }
  74          /**********************************************
  75          // IIC Write byte
  76          **********************************************/
  77          
  78          void Write_IIC_Byte(unsigned char IIC_Byte)
  79          {
  80   1        unsigned char i;
  81   1        unsigned char da;
  82   1        
  83   1        da = IIC_Byte;
  84   1        
  85   1        for(i=0;i<8;i++)    
  86   1        {
  87   2          if(da & 0x80)
  88   2          {
  89   3            OLED_SDIN = 1;
  90   3          }else
  91   2          {
  92   3            OLED_SDIN = 0;
  93   3          }
  94   2          
  95   2          OLED_SCL = 1;
  96   2          delay_us(1);
  97   2          OLED_SCL = 0;
  98   2          delay_us(1);
  99   2          
 100   2          da <<= 1;
 101   2        }
 102   1      }
 103          /**********************************************
 104          // IIC Write Command
 105          **********************************************/
 106          void Write_IIC_Command(unsigned char IIC_Command)
 107          {
 108   1        IIC_Start();
 109   1        Write_IIC_Byte(0x78);            //Slave address,SA0=0
 110   1        IIC_Wait_Ack(); 
 111   1        Write_IIC_Byte(0x00);     //write command
 112   1        IIC_Wait_Ack(); 
 113   1        Write_IIC_Byte(IIC_Command); 
 114   1        IIC_Wait_Ack(); 
C51 COMPILER V9.60.0.0   OLED                                                              05/21/2021 09:53:29 PAGE 3   

 115   1        IIC_Stop();
 116   1      }
 117          /**********************************************
 118          // IIC Write Data
 119          **********************************************/
 120          void Write_IIC_Data(unsigned char IIC_Data)
 121          {
 122   1        IIC_Start();
 123   1        Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
 124   1        IIC_Wait_Ack(); 
 125   1        Write_IIC_Byte(0x40);     //write data
 126   1        IIC_Wait_Ack(); 
 127   1        Write_IIC_Byte(IIC_Data);
 128   1        IIC_Wait_Ack(); 
 129   1        IIC_Stop();
 130   1      }
 131          void OLED_WR_Byte(unsigned char dat, unsigned char cmd)
 132          {
 133   1        if(cmd)
 134   1        {
 135   2          Write_IIC_Data(dat);
 136   2        }
 137   1        else
 138   1        {
 139   2          Write_IIC_Command(dat);
 140   2        }
 141   1      }
 142          
 143          
 144          
 145          
 146          
 147          
 148          
 149          
 150          
 151          
 152          
 153          
 154          //坐标设置
 155          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 156          {
 157   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 158   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 159   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 160   1      }       
 161          //开启OLED显示
 162          void OLED_Display_On(void)
 163          {
 164   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 165   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 166   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 167   1      }
 168          //关闭OLED显示
 169          void OLED_Display_Off(void)
 170          {
 171   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 172   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 173   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 174   1      }
 175          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!
 176          void OLED_Clear(void)  
C51 COMPILER V9.60.0.0   OLED                                                              05/21/2021 09:53:29 PAGE 4   

 177          {
 178   1        unsigned char i, n;
 179   1        
 180   1        for(i=0; i<8; i++)  
 181   1        {
 182   2          OLED_WR_Byte (0xb0+i, OLED_CMD);    //设置页地址（0~7）
 183   2          OLED_WR_Byte (0x00, OLED_CMD);      //设置显示位置―列低地址
 184   2          OLED_WR_Byte (0x10, OLED_CMD);      //设置显示位置―列高地址   
 185   2          for(n=0; n<128; n++)
 186   2            OLED_WR_Byte(0, OLED_DATA); 
 187   2        }//更新显示
 188   1      }
 189          //指定块清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!
 190          void OLED_Clear_S(unsigned char start, unsigned char end)  
 191          {
 192   1        unsigned char i, n;
 193   1        
 194   1        if((start >= 0) && (start < 8) && (end > 0) && (end < 8))
 195   1        {
 196   2          for(i=start; i<=end; i++)  
 197   2          {
 198   3            OLED_WR_Byte (0xb0+i, OLED_CMD);    //设置页地址（0~7）
 199   3            OLED_WR_Byte (0x00, OLED_CMD);      //设置显示位置―列低地址
 200   3            OLED_WR_Byte (0x10, OLED_CMD);      //设置显示位置―列高地址   
 201   3            for(n=0; n<128; n++)
 202   3              OLED_WR_Byte(0, OLED_DATA); 
 203   3          }//更新显示
 204   2        }
 205   1        
 206   1      }
 207          void OLED_On(void)  
 208          {
 209   1        unsigned char i, n;
 210   1        
 211   1        for(i=0; i<8; i++)  
 212   1        {
 213   2          OLED_WR_Byte (0xb0+i, OLED_CMD);    //设置页地址（0~7）
 214   2          OLED_WR_Byte (0x00, OLED_CMD);      //设置显示位置―列低地址
 215   2          OLED_WR_Byte (0x10, OLED_CMD);      //设置显示位置―列高地址   
 216   2          for(n=0; n<128; n++)
 217   2            OLED_WR_Byte(1, OLED_DATA); 
 218   2        }//更新显示
 219   1      }
 220          //在指定位置显示一个字符,包括部分字符
 221          //x:0~127
 222          //y:0~63
 223          //mode:0,反白显示;1,正常显示         
 224          //size:选择字体 16/12 
 225          void OLED_ShowChar(unsigned char x, unsigned char y, unsigned char chr, unsigned char Char_Size)
 226          {
 227   1        unsigned char c=0, i=0;
 228   1        
 229   1        c = chr - ' ';//得到偏移后的值
 230   1        
 231   1        if(x > Max_Column - 1)//换行处理
 232   1        {
 233   2          x = 0;
 234   2          y = y + 2;
 235   2        }
 236   1        
 237   1        if(Char_Size == 16)
 238   1        {
C51 COMPILER V9.60.0.0   OLED                                                              05/21/2021 09:53:29 PAGE 5   

 239   2          OLED_Set_Pos(x, y);
 240   2          
 241   2          for(i=0; i<8; i++)
 242   2            OLED_WR_Byte(F8X16[c * 16 + i], OLED_DATA);
 243   2          
 244   2          OLED_Set_Pos(x, y + 1);
 245   2          
 246   2          for(i=0; i<8; i++)
 247   2            OLED_WR_Byte(F8X16[c * 16 + i + 8], OLED_DATA);
 248   2        }
 249   1        else if(Char_Size == 12)
 250   1        {
 251   2          OLED_Set_Pos(x, y);
 252   2          
 253   2          for(i=0; i<6; i++)
 254   2            OLED_WR_Byte(F6x8[c][i], OLED_DATA);
 255   2        }
 256   1      }
 257          //m^n函数
 258          static unsigned int oled_pow(unsigned char m, unsigned char n)
 259          {
 260   1        unsigned int result = 1;
 261   1        
 262   1        while(n--)
 263   1          result *= m;
 264   1        
 265   1        return result;
 266   1      }
 267          //显示2个数字
 268          //x,y :起点坐标  
 269          //len :数字的位数
 270          //size:字体大小
 271          //mode:模式 0,填充模式;1,叠加模式
 272          //num:数值(0~4294967295);       
 273          void OLED_ShowNum(unsigned char x, unsigned char y, unsigned int num, unsigned char len, unsigned char siz
             -e2)
 274          {
 275   1        unsigned char t, temp;
 276   1        unsigned char enshow = 0;
 277   1        
 278   1        for(t=0; t<len; t++)
 279   1        {
 280   2          temp = (num / oled_pow(10, len - t - 1)) % 10;
 281   2          
 282   2          if(enshow == 0 && t < (len - 1))
 283   2          {
 284   3            if(temp == 0)
 285   3            {
 286   4              OLED_ShowChar(x + (size2 / 2) * t, y, ' ', size2);
 287   4              continue;
 288   4            }
 289   3            else
 290   3              enshow = 1;
 291   3          }
 292   2          
 293   2          OLED_ShowChar(x + (size2 / 2) * t, y, temp + '0', size2); 
 294   2        }
 295   1      } 
 296          //显示一个字符号串
 297          void OLED_ShowString(unsigned char x, unsigned char y, unsigned char *chr, unsigned char Char_Size)
 298          {
 299   1        unsigned char j = 0;
C51 COMPILER V9.60.0.0   OLED                                                              05/21/2021 09:53:29 PAGE 6   

 300   1        
 301   1        while (chr[j] != '\0')
 302   1        {
 303   2          OLED_ShowChar(x, y, chr[j], Char_Size);
 304   2          
 305   2          x+=8;
 306   2          
 307   2          if(x > 120)
 308   2          {
 309   3            x = 0;
 310   3            y += 2;
 311   3          }
 312   2          
 313   2          j++;
 314   2        }
 315   1      }
 316          //显示汉字
 317          void OLED_ShowCHinese(unsigned char x, unsigned char y, unsigned char no)
 318          {               
 319   1        unsigned char t, adder=0;
 320   1        
 321   1        OLED_Set_Pos(x, y);
 322   1        
 323   1        for(t=0; t<16; t++)
 324   1        {
 325   2          OLED_WR_Byte(Hzk[2*no][t], OLED_DATA);
 326   2          adder+=1;
 327   2        }
 328   1        
 329   1        OLED_Set_Pos(x, y+1);
 330   1        
 331   1        for(t=0; t<16; t++)
 332   1        {
 333   2          OLED_WR_Byte(Hzk[2*no+1][t], OLED_DATA);
 334   2          adder+=1;
 335   2        }
 336   1      }
 337          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 338          void OLED_DrawBMP(unsigned char x0, unsigned char y0, unsigned char x1, unsigned char y1, unsigned char BM
             -P[])
 339          {
 340   1        unsigned int j = 0;
 341   1        unsigned char x, y;
 342   1      
 343   1        x1 += 1;
 344   1        y1 += 1;
 345   1        
 346   1        if((y1 % 8) == 0)
 347   1          y = y1 / 8;
 348   1        else
 349   1          y = y1 / 8 + 1;
 350   1        
 351   1        for(y=y0; y<y1; y++)
 352   1        {
 353   2          OLED_Set_Pos(x0, y);
 354   2          
 355   2          for(x=x0; x<x1; x++)
 356   2          {      
 357   3            OLED_WR_Byte(BMP[j++], OLED_DATA);        
 358   3          }
 359   2        }
C51 COMPILER V9.60.0.0   OLED                                                              05/21/2021 09:53:29 PAGE 7   

 360   1      } 
 361          
 362          //初始化SSD1306             
 363          void OLED_Init(void)
 364          {
 365   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 366   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 367   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 368   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 369   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 370   1        OLED_WR_Byte(0x81,OLED_CMD);// contract control
 371   1        OLED_WR_Byte(0xFF,OLED_CMD);                                                                    //--128
 372   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 373   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 374   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 375   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 376   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 377   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 378   1        OLED_WR_Byte(0x00,OLED_CMD);//
 379   1      
 380   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 381   1        OLED_WR_Byte(0x80,OLED_CMD);//
 382   1      
 383   1        OLED_WR_Byte(0xD8,OLED_CMD);                                                                    //set area color mode off
 384   1        OLED_WR_Byte(0x05,OLED_CMD);                                                                    //
 385   1      
 386   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 387   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 388   1      
 389   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 390   1        OLED_WR_Byte(0x12,OLED_CMD);//
 391   1      
 392   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 393   1        OLED_WR_Byte(0x30,OLED_CMD);//
 394   1      
 395   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 396   1        OLED_WR_Byte(0x14,OLED_CMD);                                                                    //
 397   1      
 398   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 399   1      }  
 400          void OLED_logo(void)
 401          {
 402   1       unsigned char offset=0,Column=0;
 403   1       OLED_Clear();
 404   1       Column=0;
 405   1       OLED_ShowCHinese(offset+16*0,Column,0);
 406   1       OLED_ShowCHinese(offset+16*1,Column,1);
 407   1       OLED_ShowCHinese(offset+16*2,Column,2);
 408   1       OLED_ShowCHinese(offset+16*3,Column,3);
 409   1       OLED_ShowCHinese(offset+16*4,Column,4);
 410   1       OLED_ShowCHinese(offset+16*5,Column,5);
 411   1       OLED_ShowCHinese(offset+16*6,Column,6);
 412   1       OLED_ShowCHinese(offset+16*7,Column,7);
 413   1       offset=20;
 414   1       Column=2;
 415   1       OLED_ShowCHinese(offset+16*0,Column,19);
 416   1       OLED_ShowCHinese(offset+16*1,Column,20);
 417   1       OLED_ShowCHinese(offset+16*2,Column,21);
 418   1       OLED_ShowCHinese(offset+16*3,Column,22);
 419   1       OLED_ShowCHinese(offset+16*4,Column,17);
 420   1       OLED_ShowCHinese(offset+16*5,Column,18);
 421   1      
C51 COMPILER V9.60.0.0   OLED                                                              05/21/2021 09:53:29 PAGE 8   

 422   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1818    ----
   CONSTANT SIZE    =   3544    ----
   XDATA SIZE       =   ----      51
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
